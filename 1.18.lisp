(define (mult-new a b)
    (define (even? b)
	(= (remainder b 2) 0))
    (define (double x) (+ x x))
    (define (halve x) (/ x 2))
    (define (improve x)
	(if (even? x)
	    (halve x)
	    (halve (- x 1))))
    (define (fast-mult-iter a counter product)
	(if (= counter 0)
	    product
	    (if (even? counter)
		(fast-mult-iter (double a) (improve counter) product)
		(fast-mult-iter (double a) (improve counter) (+ product a)))))
    (fast-mult-iter a b 0.0))