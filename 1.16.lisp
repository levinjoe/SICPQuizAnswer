(define (expt b n)
    (define (even? n)
	(= (remainder n 2) 0))
    (define (square x) (* x x))
    (define (improve x)
	(if (even? x)
	    (/ x 2)
	    (/ (- x 1) 2)))
    (define (fast-expt-iter b counter product)
	(if (= counter 0)
	    product
	    (if (even? counter)
		(fast-expt-iter (square b) (improve counter) product)
		(fast-expt-iter (square b) (improve counter) (* product b)))))
    (fast-expt-iter b n 1.0))