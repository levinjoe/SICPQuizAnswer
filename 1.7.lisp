(define (sqrt x)
    (define (sqrt-iter guess x)
	(if (good-enough-new? guess x)
		guess
		(sqrt-iter (improve guess x)
			   x)))
  (define (good-enough? guess x)
      (< (abs (- (square guess) x)) 0.001))
  (define (good-enough-new? guess x)
      (if (or (< guess 1) (> guess 1000000.0)) 
	  (< (abs (- 1 (abs (/ guess (improve guess x))))) 0.001)
	  (good-enough? guess x)))
  (define (improve guess x)
      (average guess (/ x guess)))
  (define (average x y)
      (/ (+ x y) 2))
  (sqrt-iter 1.0 x))